const express = require('express');
const axios = require('axios');
const cors = require('cors');
require('dotenv').config();

const app = express();
const port = 3000;

// ุงุณุชุฎุฏู DEEPSEEK_API_KEY ุจุฏูุงู ูู OPENAI_API_KEY
const DEEPSEEK_API_KEY = process.env.DEEPSEEK_API_KEY;

app.use(cors());
app.use(express.json());

// ุฅุถุงูุฉ middleware ููุชุญูู ูู ูุฌูุฏ API key
if (!DEEPSEEK_API_KEY) {
  console.error('โ DEEPSEEK_API_KEY ุบูุฑ ููุฌูุฏ ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ');
  process.exit(1);
}

app.post('/gpt', async (req, res) => {
  try {
    const { messages, model } = req.body;
    
    // ุงูุชุญูู ูู ุตุญุฉ ุงูุจูุงูุงุช ุงูููุฑุณูุฉ
    if (!messages || !Array.isArray(messages) || messages.length === 0) {
      return res.status(400).json({ 
        error: 'ุตูุบุฉ ุงูุฑุณุงุฆู ุบูุฑ ุตุญูุญุฉ - ูุฌุจ ุฃู ุชููู ูุตูููุฉ ุบูุฑ ูุงุฑุบุฉ' 
      });
    }

    // ุงูุชุญูู ูู ุทูู ุงูุฑุณุงุฆู
    const totalLength = messages.map(m => (m.content || "")).join("").length;
    if (totalLength > 10000) { // ุฒูุงุฏุฉ ุงูุญุฏ ุงูุฃูุตู ุฅูู 10000 ุญุฑู
      return res.status(413).json({ 
        error: `ุงูุฑุณุงูุฉ ุทูููุฉ ุฌุฏุงู (${totalLength}/10000 ุญุฑู)` 
      });
    }

    // ุฅุนุฏุงุฏ ุงูุจูุงูุงุช ุงูููุฑุณูุฉ ุฅูู DeepSeek
    const requestData = {
      model: model || "deepseek-chat", // ุงุณุชุฎุฏุงู ูููุฐุฌ DeepSeek ุงูุงูุชุฑุงุถู
      messages: messages,
      stream: false,
      temperature: 0.7,
      max_tokens: 2000
    };

    console.log('๐ค ุฅุฑุณุงู ุทูุจ ุฅูู DeepSeek API...');
    
    const response = await axios.post(
      'https://api.deepseek.com/v1/chat/completions',
      requestData,
      {
        headers: {
          'Authorization': `Bearer ${DEEPSEEK_API_KEY}`,
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        timeout: 30000 // 30 ุซุงููุฉ timeout
      }
    );

    console.log('โ ุชู ุงุณุชูุงู ุงูุฑุฏ ูู DeepSeek API');
    res.json(response.data);

  } catch (err) {
    console.error('โ ุฎุทุฃ ูู DeepSeek API:');
    
    if (err.response) {
      // ุฎุทุฃ ูู ุงูุฎุงุฏู (4xx, 5xx)
      console.error('Status:', err.response.status);
      console.error('Data:', err.response.data);
      
      const statusCode = err.response.status;
      let errorMessage = 'ุฎุทุฃ ูู DeepSeek API';
      
      switch (statusCode) {
        case 401:
          errorMessage = 'ููุชุงุญ API ุบูุฑ ุตุญูุญ ุฃู ููุชูู ุงูุตูุงุญูุฉ';
          break;
        case 403:
          errorMessage = 'ููุณ ูุฏูู ุตูุงุญูุฉ ูููุตูู ุฅูู ูุฐุง ุงูููุฑุฏ';
          break;
        case 429:
          errorMessage = 'ุชุฌุงูุฒุช ุงูุญุฏ ุงููุณููุญ ูู ุงูุทูุจุงุชุ ุญุงูู ูุฑุฉ ุฃุฎุฑู ูุงุญูุงู';
          break;
        case 500:
          errorMessage = 'ุฎุทุฃ ุฏุงุฎูู ูู ุฎุงุฏู DeepSeek';
          break;
        default:
          errorMessage = err.response.data?.error?.message || 'ุฎุทุฃ ุบูุฑ ูุนุฑูู ูู DeepSeek API';
      }
      
      res.status(statusCode).json({ 
        error: errorMessage,
        details: err.response.data 
      });
      
    } else if (err.request) {
      // ูู ูุชู ุงุณุชูุงู ุฑุฏ ูู ุงูุฎุงุฏู
      console.error('No response received:', err.message);
      res.status(503).json({ 
        error: 'ูุง ูููู ุงููุตูู ุฅูู DeepSeek API - ุชุญูู ูู ุงูุงุชุตุงู ุจุงูุฅูุชุฑูุช' 
      });
      
    } else {
      // ุฎุทุฃ ูู ุฅุนุฏุงุฏ ุงูุทูุจ
      console.error('Request setup error:', err.message);
      res.status(500).json({ 
        error: 'ุฎุทุฃ ูู ุฅุนุฏุงุฏ ุงูุทูุจ',
        details: err.message 
      });
    }
  }
});

// ุฅุถุงูุฉ endpoint ููุชุญูู ูู ุญุงูุฉ ุงูุฎุงุฏู
app.get('/health', (req, res) => {
  res.json({ 
    status: 'OK', 
    timestamp: new Date().toISOString(ูุจ),
    apiKeyConfigured: !!DEEPSEEK_API_KEY 
  });
});

// ุฅุถุงูุฉ endpoint ููุชุญูู ูู ุตุญุฉ API key
app.get('/test-api', async (req, res) => {
  try {
    const response = await axios.post(
      'https://api.deepseek.com/v1/chat/completions',
      {
        model: "deepseek-chat",
        messages: [{ role: "user", content: "Hello" }],
        max_tokens: 10
      },
      {
        headers: {
          'Authorization': `Bearer ${DEEPSEEK_API_KEY}`,
          'Content-Type': 'application/json'
        },
        timeout: 10000
      }
    );
    
    res.json({ 
      status: 'API key ุตุญูุญ', 
      model: response.data.model 
    });
    
  } catch (err) {
    res.status(500).json({ 
      status: 'API key ุบูุฑ ุตุญูุญ ุฃู ูุดููุฉ ูู ุงูุงุชุตุงู',
      error: err.response?.data || err.message 
    });
  }
});

app.listen(port, () => {
  console.log(`๐ ุงูุฎุงุฏู ูุนูู ุนูู http://localhost:${port}`);
  console.log(`๐ API Key: ${DEEPSEEK_API_KEY ? 'ููููู' : 'โ ุบูุฑ ููููู'}`);
  console.log(`๐ ุงูู endpoints ุงููุชุงุญุฉ:`);
  console.log(`   POST /gpt - ููุชุญุฏุซ ูุน DeepSeek`);
  console.log(`   GET /health - ููุชุญูู ูู ุญุงูุฉ ุงูุฎุงุฏู`);
  console.log(`   GET /test-api - ูุงุฎุชุจุงุฑ API key`);
});